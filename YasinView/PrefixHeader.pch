//
//  PrefixHeader.pch
//  66
//
//  Created by Yasin-iOSer on 17/1/5.
//  Copyright © 2017年 Yasin-iOSer. All rights reserved.
//

#ifndef PrefixHeader_pch
#define PrefixHeader_pch

#import "UIButton+CountDown.h"
#import "YSTextView.h"
#import "YSTextFeild.h"
#import "GCDHelper.h"
#import "CGRectHelper.h"
#import "NSArray+ArrayExtral.h"
#import "NSMutableArray+ArrayExtral.h"
#import "NSAttributedString+AttributedStringExtral.h"
#import "NSMutableAttributedString+AttributedStringExtral.h"
#import "NSBundle+BundleExtral.h"
#import "NSCharacterSet+EmojiAdditions.h"
#import "NSData+DataExtral.h"
#import "NSData+CommonCrypto.h"
#import "NSDate+DateExtral.h"
#import "NSDate+Utilities.h"
#import "NSDictionary+DictExtral.h"
#import "NSMutableDictionary+DictExtral.h"
#import "NSFileManager+FileManagerExtral.h"
#import "NSInvocation+SimpleCreation.h"
#import "NSObject+WeakSelf.h"
#import "NSObject+CallPhone.h"
#import "NSObject+ObjectExtral.h"
#import "NSObject+NSTimerExtral.h"
#import "NSObject+Association.h"
#import "NSMutableString+StringExtral.h"
#import "NSString+CommonCrypto.h"
#import "NSString+NSStringExtras.h"
#import "UIActionSheet+ActionSheetExtral.h"
#import "UIAlertView+AlertExtral.h"
#import "UIButton+Bootstrap.h"
#import "UIColor+Colours.h"
#import "UIColor+convertAddition.h"
#import "UIControl+ControlExtral.h"
#import "UIDevice+DeviceExtral.h"
#import "UIImage+animatedGIF.h"
#import "UIImage+ImageExtral.h"
#import "UIImageView+ImageExtral.h"
#import "UILabel+ContentSize.h"
#import "UIImage+ImageExtral.h"
#import "UIImage+animatedGIF.h"
#import "UIImageView+ImageExtral.h"
#import "UILabel+ContentSize.h"
#import "UILabel+dynamicSizeMe.h"
#import "UIScreen+ScreenExtral.h"
#import "UIScrollView+CircleScroll.h"
#import "UITableView+TableViewExtral.h"
#import "UIViewController+VCExtra.h"
#import "UIView+ActivityIndicatorCategroy.h"
#import "UIView+FrameExtral.h"
#import "MBProgressHUD.h"
#import "UIView+ProgressHUD.h"
#import "UIView+ToastShowExtral.h"
#import "ToastManager.h"
#import "UIView+ViewExtral.h"

#import "AppDelegate+ZTJPush.h"
#import "NSArray+Log.h"
#import "NSData+Base64.h"
#import "NSDate+ZTCurrentDate.h"
#import "NSDictionary+NullString.h"
#import "NSString+ImageURLWithWH.h"
#import "NSString+VerifyPhoneNumber.h"
#import "NSURL+LifeImageURL.h"
#import "UIBarButtonItem+Item.h"
#import "UIBarButtonItem+ZTBarButtonItem.h"
#import "UIButton+countDown.h"
#import "UIButton+VerticalLayout.h"
#import "UIButton+ZTButton.h"
#import "XMGVerticalButton.h"
#import "UIColor+HexColor.h"
#import "UIImage+Image.h"
#import "UIImageView+CornerRadius.h"
#import "UILabel+Label.h"
#import "UILabel+YBAttributeTextTapAction.h"
#import "UITableView+ZTTableView.h"
#import "UIView+AddHorizontalLine.h"
#import "UIView+AdjustFrame.h"
#import "UIView+CornerMaskLayer.h"
#import "AppDelegate+ZTJPush.h"
#import "AppDelegate+ZTJPush.h"
#import "AlertControllerTool.h"
#import "NSObject+CallPhone.h"
#import "UIButton+AFNetworking.h"
#import "AFNetworking.h"
#import "MJExtension.h"

#import "DLTableViewController.h"


///快速定义模型
#define __decl_property                     @property (nonatomic,strong)
#define __decl_model_string__               @property (nonatomic,strong) NSString
#define __decl_model_number__               @property (nonatomic,strong) NSNumber
#define __decl_model_array__                @property (nonatomic,strong) NSArray


// Include any system framework and library headers here that should be included in all compilation units.
// You will also need to set the Prefix Header build setting of one or more of your targets to reference this file.
#define ALERT_MARGIN_LEFT 25

///常用的3种颜色 :   深蓝色 RGB(60,41,101)   红色RGB(233,84,97)  视图背景白色 RGB(239,239,244)

/// Colors
#define RGB(a,b,c)   [UIColor colorWithRed:a/255.0f green:b/255.0f blue:c/255.0f alpha:1.0]

/// Orange
#define YSOrangeColor RGB(221,107,30)//RGB(216,98,26)
/// green
#define YSGreenColor RGB(84,184,199)

///// 导航颜色
#define NavigationBarBgColor RGB(60,41,101)
/// 标题颜色
#define NavigationTitleDefualtColor [UIColor whiteColor]

///常用红色
#define YSCommRedColor RGB(233,84,97)
///视图背景色
#define YSViewBgColor RGB(239,239,244)
///金额绿色 (减少)
#define YSAmountReduceColor RGB(23,159,17)

///正常 蓝
#define YSMoveLockNormalColor RGB(30,172,252)
///错误 红
#define YSMoveLockErrorColor RGB(252,54,30)

/// cyan
#define YSCYanColor RGB(103,195,208)

/// cicel text color
#define YSCircleTextColor RGB(161,209,224)

/// progress text color
#define YSProgressTextColor RGB(99,195,208)

#define YJJHTTPLoggerEnabled

///分页功能
#define PageIndexStart 0 /// index起始
#define PageSizeDefault 10 /// 默认分页
//iOS版本
#define IOSVersion ([[[UIDevice currentDevice] systemVersion] floatValue])
///IOS __version__以上
#define IsAboveIOSVersion(__version__) (IOSVersion >= (__version__))
///iOS __version_以下
#define IsBelowIOSVersion(__version__) (IOSVersion <= (__version__))
///iOS __version__
#define IsIOSVersion(__version__) (IOSVersion == (__version__))

///iOS 6.0上下
#define IsIOSAbove6Version IsAboveIOSVersion(6.0f)
#define IsIOSBelow6Version IsBelowIOSVersion(6.0f)

///IOS 7.0上下
#define IsIOSAbove7Version IsAboveIOSVersion(7.0f)
#define IsIOSBelow7Version IsBelowIOSVersion(7.0f)

///iOS 8.0上下
#define IsIOSAbove8Version IsAboveIOSVersion(8.0f)
#define IsIOSBelow8Version IsBelowIOSVersion(8.0f)


#define APPWindow [[[UIApplication sharedApplication] delegate] window]

//-------------------获取设备大小-------------------------
//NavBar高度
#define NavigationBar_HEIGHT 44
//获取屏幕 宽度、高度
#define SCREEN_WIDTH ([UIScreen mainScreen].bounds.size.width)
#define SCREEN_HEIGHT ([UIScreen mainScreen].bounds.size.height)
#define SCREEN_BOUNDS ([UIScreen mainScreen].bounds)
#define SCREEN_SIZE ([UIScreen mainScreen].bounds.size)

//-------------------获取设备大小-------------------------


//-------------------打印日志-------------------------
//DEBUG  模式下打印日志,当前行
#ifdef DEBUG
#   define DLog(fmt, ...) NSLog((@"%s [Line %d] " fmt), __PRETTY_FUNCTION__, __LINE__, ##__VA_ARGS__);
#else
#   define DLog(...)
#endif


//重写NSLog,Debug模式下打印日志和当前行数
#if DEBUG
#define NSLog(FORMAT, ...) fprintf(stderr,"\nfunction:%s line:%d content:%s\n", __FUNCTION__, __LINE__, [[NSString stringWithFormat:FORMAT, ##__VA_ARGS__] UTF8String]);
#else
#define NSLog(FORMAT, ...) nil
#endif

//DEBUG  模式下打印日志,当前行 并弹出一个警告
#ifdef DEBUG
#   define ULog(fmt, ...)  { UIAlertView *alert = [[UIAlertView alloc] initWithTitle:[NSString stringWithFormat:@"%s\n [Line %d] ", __PRETTY_FUNCTION__, __LINE__] message:[NSString stringWithFormat:fmt, ##__VA_ARGS__]  delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil]; [alert show]; }
#else
#   define ULog(...)
#endif


#define ITTDEBUG
#define ITTLOGLEVEL_INFO     10
#define ITTLOGLEVEL_WARNING  3
#define ITTLOGLEVEL_ERROR    1

#ifndef ITTMAXLOGLEVEL

#ifdef DEBUG
#define ITTMAXLOGLEVEL ITTLOGLEVEL_INFO
#else
#define ITTMAXLOGLEVEL ITTLOGLEVEL_ERROR
#endif

#endif

// The general purpose logger. This ignores logging levels.
#ifdef ITTDEBUG
#define ITTDPRINT(xx, ...)  NSLog(@"%s(%d): " xx, __PRETTY_FUNCTION__, __LINE__, ##__VA_ARGS__)
#else
#define ITTDPRINT(xx, ...)  ((void)0)
#endif

// Prints the current method's name.
#define ITTDPRINTMETHODNAME() ITTDPRINT(@"%s", __PRETTY_FUNCTION__)

// Log-level based logging macros.
#if ITTLOGLEVEL_ERROR <= ITTMAXLOGLEVEL
#define ITTDERROR(xx, ...)  ITTDPRINT(xx, ##__VA_ARGS__)
#else
#define ITTDERROR(xx, ...)  ((void)0)
#endif

#if ITTLOGLEVEL_WARNING <= ITTMAXLOGLEVEL
#define ITTDWARNING(xx, ...)  ITTDPRINT(xx, ##__VA_ARGS__)
#else
#define ITTDWARNING(xx, ...)  ((void)0)
#endif

#if ITTLOGLEVEL_INFO <= ITTMAXLOGLEVEL
#define ITTDINFO(xx, ...)  ITTDPRINT(xx, ##__VA_ARGS__)
#else
#define ITTDINFO(xx, ...)  ((void)0)
#endif

#ifdef ITTDEBUG
#define ITTDCONDITIONLOG(condition, xx, ...) { if ((condition)) { \
ITTDPRINT(xx, ##__VA_ARGS__); \
} \
} ((void)0)
#else
#define ITTDCONDITIONLOG(condition, xx, ...) ((void)0)
#endif

#define ITTAssert(condition, ...)                                       \
do {                                                                      \
if (!(condition)) {                                                     \
[[NSAssertionHandler currentHandler]                                  \
handleFailureInFunction:[NSString stringWithUTF8String:__PRETTY_FUNCTION__] \
file:[NSString stringWithUTF8String:__FILE__]  \
lineNumber:__LINE__                                  \
description:__VA_ARGS__];                             \
}                                                                       \
} while(0)

//---------------------打印日志--------------------------


//----------------------系统----------------------------

//获取系统版本
#define IOS_VERSION [[[UIDevice currentDevice] systemVersion] floatValue]
#define CurrentSystemVersion [[UIDevice currentDevice] systemVersion]

//获取当前语言
#define CurrentLanguage ([[NSLocale preferredLanguages] objectAtIndex:0])

//判断是否 Retina屏、设备是否%fhone 5、是否是iPad
#define isRetina ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(640, 960), [[UIScreen mainScreen] currentMode].size) : NO)
#define iPhone5 ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(640, 1136), [[UIScreen mainScreen] currentMode].size) : NO)
#define isPad (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPad)


//判断是真机还是模拟器
#if TARGET_OS_IPHONE
//iPhone Device
#endif

#if TARGET_IPHONE_SIMULATOR
//iPhone Simulator
#endif

//检查系统版本
#define SYSTEM_VERSION_EQUAL_TO(v)                  ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] == NSOrderedSame)
#define SYSTEM_VERSION_GREATER_THAN(v)              ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] == NSOrderedDescending)
#define SYSTEM_VERSION_GREATER_THAN_OR_EQUAL_TO(v)  ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] != NSOrderedAscending)
#define SYSTEM_VERSION_LESS_THAN(v)                 ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] == NSOrderedAscending)
#define SYSTEM_VERSION_LESS_THAN_OR_EQUAL_TO(v)     ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] != NSOrderedDescending)


//----------------------系统----------------------------


//----------------------内存----------------------------

//使用ARC和不使用ARC
#if __has_feature(objc_arc)
//compiling with ARC
#else
// compiling without ARC
#endif

#pragma mark - common functions
#define RELEASE_SAFELY(__POINTER) { [__POINTER release]; __POINTER = nil; }

//释放一个对象
#define SAFE_DELETE(P) if(P) { [P release], P = nil; }

#define SAFE_RELEASE(x) [x release];x=nil



//----------------------内存----------------------------


//----------------------图片----------------------------

//读取本地图片
#define LOADIMAGE(file,ext) [UIImage imageWithContentsOfFile:[[NSBundle mainBundle]pathForResource:file ofType:ext]]

//定义UIImage对象
#define IMAGE(A) [UIImage imageWithContentsOfFile:[[NSBundle mainBundle] pathForResource:A ofType:nil]]

//定义UIImage对象
#define ImageNamed(_pointer) [UIImage imageNamed:[UIUtil imageName:_pointer]]

//建议使用前两种宏定义,性能高于后者
//----------------------图片----------------------------



//----------------------颜色类---------------------------
// rgb颜色转换（16进制->10进制）
//#define UIColorFromRGB(rgbValue) [UIColor colorWithRed:((float)((rgbValue & 0xFF0000) >> 16))/255.0 green:((float)((rgbValue & 0xFF00) >> 8))/255.0 blue:((float)(rgbValue & 0xFF))/255.0 alpha:1.0]

//带有RGBA的颜色设置
//#define COLOR(R, G, B, A) [UIColor colorWithRed:R/255.0 green:G/255.0 blue:B/255.0 alpha:A]

// 获取RGB颜色
//#define RGBA(r,g,b,a) [UIColor colorWithRed:r/255.0f green:g/255.0f blue:b/255.0f alpha:a]
//#define RGB(r,g,b) RGBA(r,g,b,1.0f)

//背景色
//#define BACKGROUND_COLOR [UIColor colorWithRed:242.0/255.0 green:236.0/255.0 blue:231.0/255.0 alpha:1.0]
//
////清除背景色
//#define CLEARCOLOR [UIColor clearColor]

//#pragma mark - color functions
//#define RGBCOLOR(r,g,b) [UIColor colorWithRed:(r)/255.0f green:(g)/255.0f blue:(b)/255.0f alpha:1]
//#define RGBACOLOR(r,g,b,a) [UIColor colorWithRed:(r)/255.0f green:(g)/255.0f blue:(b)/255.0f alpha:(a)]

//----------------------颜色类--------------------------



//----------------------其他----------------------------

//方正黑体简体字体定义
#define FONT(F) [UIFont fontWithName:@"FZHTJW--GB1-0" size:F]


//定义一个API
#define APIURL                @"http://xxxxx/"
//登陆API
#define APILogin              [APIURL stringByAppendingString:@"Login"]

//设置View的tag属性
#define VIEWWITHTAG(_OBJECT, _TAG)    [_OBJECT viewWithTag : _TAG]
//程序的本地化,引用国际化的文件
#define MyLocal(x, ...) NSLocalizedString(x, nil)

//G－C－D
#define BACK(block) dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), block)
#define MAIN(block) dispatch_async(dispatch_get_main_queue(),block)

//NSUserDefaults 实例化
#define USER_DEFAULT [NSUserDefaults standardUserDefaults]


//由角度获取弧度 有弧度获取角度
#define degreesToRadian(x) (M_PI * (x) / 180.0)
#define radianToDegrees(radian) (radian*180.0)/(M_PI)



//单例化一个类
#define SYNTHESIZE_SINGLETON_FOR_CLASS(classname) \
\
static classname *shared##classname = nil; \
\
+ (classname *)shared##classname \
{ \
@synchronized(self) \
{ \
if (shared##classname == nil) \
{ \
shared##classname = [[self alloc] init]; \
} \
} \
\
return shared##classname; \
} \
\
+ (id)allocWithZone:(NSZone *)zone \
{ \
@synchronized(self) \
{ \
if (shared##classname == nil) \
{ \
shared##classname = [super allocWithZone:zone]; \
return shared##classname; \
} \
} \
\
return nil; \
} \
\
- (id)copyWithZone:(NSZone *)zone \
{ \
return self; \
}


#endif /* PrefixHeader_pch */


